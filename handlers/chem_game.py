from aiogram import F, Router, types
from serveses.keybords import *
from serveses.states import Wait
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from serveses.function_chem import *
import time

router_5 = Router()


@router_5.callback_query(F.data == "chem_game")
async def first(call: CallbackQuery, state: FSMContext):
    await call.message.answer_photo(
        caption="–ü—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ø–∞–ª –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—ã–∂–∏–≤–∞–Ω–∏–µ c —Ö–∏–º–∏—Ü–µ–π ‚ò†Ô∏è.\n–£ —Ç–µ–±—è –≤—Å–µ–≥–æ –ª–∏—à—å –æ–¥–Ω–∞ –∂–∏–∑–Ω—å, –∞ –∑–Ω–∞—á–∏—Ç —Ç–µ–±–µ –Ω–µ–ª—å–∑—è –¥–æ–ø—É—Å–∫–∞—Ç—å –æ—à–∏–±–∫—É üòµ.\n–ü—Ä–∞–≤–∏–ª–∞:\n1) –ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞ - –¥—Ä—É–≥ üôã‚Äç‚ôÄÔ∏è\n2) –ü—Ä–æ–±–∏—Ä–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∞–∫—Ç–∏–≤–æ–≤ üí£\n3) –°–æ–ª—å –Ω—é—Ö–∞—Ç—å –Ω–µ–ª—å–∑—è üßü‚Äç‚ôÇÔ∏è\n4) –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ 1,2 –∏–ª–∏ 3 üéØ",
        photo=types.FSInputFile("datas/for_chem/chem.png"))
    time.sleep(5)
    await call.message.answer(
        "–≠–ø–∏–∑–æ–¥ 1 ‚ò†Ô∏è:\n–ö —Ç–µ–±–µ –ø–æ–¥–æ—à–ª–∞ –ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞, —Ç–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è ? ü§Ø\n1) –ü—Ä–æ–≥–Ω–∞—Ç—å\n2) –í—ã—Å–ª—É—à–∞—Ç—å\n3) –ó–∞–ø–ª–∞–∫–∞—Ç—å")
    await state.set_state(Wait.wait_answer_chem_1)


@router_5.message(F.text, Wait.wait_answer_chem_1)
async def second(msg: Message, state: FSMContext):
    mes = msg.text
    try:
        ans = first_chem(mes)
        if ans == "OK":
            await msg.answer(
                "–≠–ø–∏–∑–æ–¥ 2 ‚ò†Ô∏è:\n–¢—ã —É–≤–∏–¥–µ–ª –±–µ–ª—ã–π –ø–æ—Ä–æ—à–æ–∫ –Ω–∞ –ø–∞—Ä—Ç–µ, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å ? üòç\n1) –ó–∞–Ω—é—Ö–Ω—ë—à—å –≤ –¥–≤–µ –Ω–æ–∑–¥—Ä–∏\n2)–ó–∞–Ω—é—Ö–Ω–µ—à—å –≤ –æ–¥–Ω—É –Ω–æ–∑–¥—Ä—é\n3) –°—Ç—Ä—è—Ö–Ω—ë—à—å –Ω–∞ –ø–æ–ª")
            await state.set_state(Wait.wait_answer_chem_2)
        else:
            buttons = InlineKeyboardMarkup(inline_keyboard=menu)
            await msg.answer("–•–∏–º–∏—Ü–∞ —É–≤–∏–¥–µ–ª–∞ —ç—Ç–æ üôÄ. –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª –≤–µ—Ä–Ω–∏—Å—å –≤ –º–µ–Ω—é ", reply_markup=buttons)
            await state.clear()
    except:
        await msg.answer("–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏, –∏–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–∏–≥—Ä–∞—Ç—å ? ü§¨")
        await  msg.answer("–ö —Ç–µ–±–µ –ø–æ–¥–æ—à–ª–∞ –ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞, —Ç–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è ? ü§Ø\n1) –ü—Ä–æ–≥–Ω–∞—Ç—å\n2) –í—ã—Å–ª—É—à–∞—Ç—å\n3) –ó–∞–ø–ª–∞–∫–∞—Ç—å")


@router_5.message(F.text, Wait.wait_answer_chem_2)
async def third(msg: Message, state: FSMContext):
    mes = msg.text
    try:
        ans = second_chem(mes)
        if ans == "OK":
            await msg.answer(
                "–≠–ø–∏–∑–æ–¥ 3 ‚ò†Ô∏è:\n–¢—ã —Ä–µ—à–∏–ª —Å–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é, –∫–∞–∫ —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–µ—à—å ? üò∑\n1) –ü–æ–¥–∑–æ–≤—É –ê–Ω–Ω—É –ò–≤–∞–Ω–æ–≤–Ω—É\n2) –î–æ—Å—Ç–∞–Ω—É —à–ø–æ—Ä—ã\n3) –ë—É–¥—É –∑–≤–∞—Ç—å –æ—Ç–ª–∏—á–Ω–∏–∫–æ–≤ –Ω–∞ –ø–æ–º–æ—â—å")
            await state.set_state(Wait.wait_answer_chem_3)
        else:
            buttons = InlineKeyboardMarkup(inline_keyboard=menu)
            await msg.answer("–≠—Ç–æ –±—ã–ª–∞ —Å–æ–ª—å –∏ —Ç—ã –æ–±–¥–æ–ª–±–∞–ª—Å—è üò§. –í–µ—Ä–Ω–∏—Å—å –≤ –º–µ–Ω—é", reply_markup=buttons)
            await state.clear()
    except:
        await msg.answer("–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏, –∏–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–∏–≥—Ä–∞—Ç—å ? ü§¨")
        await  msg.answer(
            "–¢—ã —É–≤–∏–¥–µ–ª –±–µ–ª—ã–π –ø–æ—Ä–æ—à–æ–∫ –Ω–∞ –ø–∞—Ä—Ç–µ, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å ? üòç\n1) –ó–∞–Ω—é—Ö–Ω—ë—à—å –≤ –¥–≤–µ –Ω–æ–∑–¥—Ä–∏\n2)–ó–∞–Ω—é—Ö–Ω–µ—à—å –≤ –æ–¥–Ω—É –Ω–æ–∑–¥—Ä—é\n3) –°—Ç—Ä—è—Ö–Ω—ë—à—å –Ω–∞ –ø–æ–ª")


@router_5.message(F.text, Wait.wait_answer_chem_3)
async def fourth(msg: Message, state: FSMContext):
    mes = msg.text
    try:
        ans = third_chem(mes)
        if ans == "OK":
            await msg.answer(
                "–≠–ø–∏–∑–æ–¥ 4 ‚ò†Ô∏è:\n–¢—ã —É–≤–∏–¥–µ–ª –ø—Ä–æ–±–∏—Ä–∫—É —Å –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º –≤–µ—â–µ—Å—Ç–≤–æ–º, —Ç–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è ? üòº\n1) –ü—Ä–æ—Å—Ç–æ –ø–æ–Ω—é—Ö–∞—é\n2) –í—ã–ø—å—é\n3) –°–ø—Ä–æ—à—É —á—Ç–æ —ç—Ç–æ")
            await state.set_state(Wait.wait_answer_chem_4)
        else:
            buttons = InlineKeyboardMarkup(inline_keyboard=menu)
            await msg.answer("–¢–µ–±—è –∑–∞–º–µ—Ç–∏–ª–∏ üñï, –≤–µ—Ä–Ω–∏—Å—å –≤ –º–µ–Ω—é", reply_markup=buttons)
            await state.clear()
    except:
        await msg.answer("–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏, –∏–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–∏–≥—Ä–∞—Ç—å ? ü§¨")
        await  msg.answer(
            "–¢—ã —Ä–µ—à–∏–ª —Å–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é, –∫–∞–∫ —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–µ—à—å ? üò∑\n1) –ü–æ–¥–∑–æ–≤—É –ê–Ω–Ω—É –ò–≤–∞–Ω–æ–≤–Ω—É\n2) –î–æ—Å—Ç–∞–Ω—É —à–ø–æ—Ä—ã\n3) –ë—É–¥—É –∑–≤–∞—Ç—å –æ—Ç–ª–∏—á–Ω–∏–∫–æ–≤ –Ω–∞ –ø–æ–º–æ—â—å")


@router_5.message(F.text, Wait.wait_answer_chem_4)
async def fourth(msg: Message, state: FSMContext):
    mes = msg.text
    try:
        ans = four_chem(mes)
        if ans == "OK":
            await msg.answer(
                "–≠–ø–∏–∑–æ–¥ 5 ‚ò†Ô∏è:\n–¢—ã –∑–∞—Ö–æ—Ç–µ–ª –¥–∞—Ç—å –≥–∞–∑—É, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å? üêñ\n1) –°–¥–µ—Ä–∂—É—Å—å\n2) –î–∞–º –ø–æ-–ø–æ–ª–Ω–æ–π\n3) –î–∞–º –∫–∞–∫ –º—ã—à–∫–∞")
            await state.set_state(Wait.wait_answer_chem_5)
        elif ans == "Ok_1":
            await msg.answer("–¢—ã –≤—ã–∂–∏–ª, –Ω–æ –≤ –æ—Ç–≤–µ—Ç —É—Å–ª—ã—à–∞–ª '–ê —Ç–µ–±—è —ç—Ç–æ –µ–±–∞—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ üôà'")
            await msg.answer(
                "–≠–ø–∏–∑–æ–¥ 5 ‚ò†Ô∏è:\n–¢—ã –∑–∞—Ö–æ—Ç–µ–ª –¥–∞—Ç—å –≥–∞–∑—É, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å? üêñ\n1) –°–¥–µ—Ä–∂—É—Å—å\n2) –î–∞–º –ø–æ-–ø–æ–ª–Ω–æ–π\n3) –î–∞–º –∫–∞–∫ –º—ã—à–∫–∞")
            await state.set_state(Wait.wait_answer_chem_5)
        else:
            buttons = InlineKeyboardMarkup(inline_keyboard=menu)
            await msg.answer("–≠—Ç–æ –±—ã–ª —è–¥ ‚ò†Ô∏è —Ç—ã —É–º–µ—Ä", reply_markup=buttons)
            await state.clear()
    except:
        await msg.answer("–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏, –∏–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–∏–≥—Ä–∞—Ç—å ? ü§¨")
        await  msg.answer(
            "–¢—ã —É–≤–∏–¥–µ–ª –ø—Ä–æ–±–∏—Ä–∫—É —Å –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º –≤–µ—â–µ—Å—Ç–≤–æ–º, —Ç–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è ? üòº\n1) –ü—Ä–æ—Å—Ç–æ –ø–æ–Ω—é—Ö–∞—é\n2) –í—ã–ø—å—é\n3) –°–ø—Ä–æ—à—É —á—Ç–æ —ç—Ç–æ")


@router_5.message(F.text, Wait.wait_answer_chem_5)
async def fourth(msg: Message, state: FSMContext):
    mes = msg.text
    try:
        ans = five_chem(mes)
        if ans == "OK":
            await state.clear()
            buttons = InlineKeyboardMarkup(inline_keyboard=menu)
            await msg.answer_photo(
                caption="–ú–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, —Ç–µ–ø–µ—Ä—å —Ç—ã –¥–æ—Å—Ç–æ–∏–Ω –∑–≤–∞–Ω–∏—è —Å—Ç–∞–ª–∫–µ—Ä–∞ —Ñ—Ä—ç üéñüéñüéñ\n–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é –º–µ—á–µ–Ω—ã–π",photo=types.FSInputFile("datas/for_chem/i.jpg"))
            await msg.answer("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",reply_markup=buttons)
        else:
            buttons = InlineKeyboardMarkup(inline_keyboard=menu)
            await msg.answer("–ó–∞–¥–æ—Ö–Ω—É–ª–∏—Å—å –≤—Å–µ –≤ —Ä–∞–¥–∏—É—Å–µ 5 –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ üö∑, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –≤ –º–µ–Ω—é ", reply_markup=buttons)
            await state.clear()
    except:
        await msg.answer("–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏, –∏–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–æ–∏–≥—Ä–∞—Ç—å ? ü§¨")
        await  msg.answer("–¢—ã –∑–∞—Ö–æ—Ç–µ–ª –¥–∞—Ç—å –≥–∞–∑—É, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å? üêñ\n1) –°–¥–µ—Ä–∂—É—Å—å\n2) –î–∞–º –ø–æ-–ø–æ–ª–Ω–æ–π\n3) –î–∞–º –∫–∞–∫ –º—ã—à–∫–∞")


@router_5.message()
async def next_message(msg: Message):
    buttons = InlineKeyboardMarkup(inline_keyboard=kb)
    await msg.answer("–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π üëá", reply_markup=buttons)
